
upstream redis_pool{
    server 127.0.0.1:6379;
    keepalive 1024;
}

log_format tick "$msec$http_x_client$u_utrace$u_strace$u_domain$u_sw$u_sh$u_cd$u_lang$u_url$u_referrer$http_user_agent$u_account$u_event$u_exts";

server{

    listen 80;
    server_name a.tongji.com;

    set_real_ip_from 172.18.0.0/10;
    real_ip_header X-Client;
    real_ip_recursive on;

    set $u_utrace '';
    set $u_strace '';
    set $u_domain '';
    set $u_sw '';
    set $u_sh '';
    set $u_cd '';
    set $u_lang '';
    set $u_url '';
    set $u_referrer '';
    set $u_account '';
    set $u_event '';
    set $u_exts '';

    location / {
        root   html;
        index  index.html index.htm;
    }

    location /1.gif {
        
        default_type image/gif;
        
        access_log off;        
        access_by_lua "
            local ip = ngx.var.http_x_client
	    if not ip then
		ip = ngx.var.remote_addr
	    end
	    
            local uid = ngx.var.cookie___utrace
            if not uid then
                uid = ngx.md5(ngx.now() .. ip .. ngx.var.http_user_agent)
            end

            local sid = ngx.var.cookie___strace
            if not sid then
                sid = ngx.md5(ngx.now() .. ip)
            end

            ngx.header['Set-Cookie'] = {'__utrace=' .. uid .. '; path=/', '__strace=' .. sid .. '; path=/' .. '; max-age=1800'}

            if ngx.var.arg_domain then
               local pam = '' ..ngx.var.args .. '&utrace=' .. uid ..'&strace=' .. sid .. '&msec=' .. ngx.now() .. '&userip=' .. ip .. '&useragent=' .. ngx.var.http_user_agent
               ngx.location.capture('/i-log?' .. ngx.var.args .. '&utrace=' .. uid ..'&strace=' .. sid)
               ngx.location.capture('/set-redis?' .. pam );
            end
        ";

        add_header Expires "Fri, 01 Jan 1980 00:00:00 GMT";
        add_header Pragma "no-cache";
        add_header Cache-Control "no-cache, max-age=0, must-revalidate";

        empty_gif;
    }

    location /set-redis{
        internal;

        set_unescape_uri $u_utrace $arg_utrace;
        set_unescape_uri $u_strace $arg_strace;
        set_unescape_uri $u_domain $arg_domain;
        set_unescape_uri $u_sw $arg_sw;
        set_unescape_uri $u_sh $arg_sh;
        set_unescape_uri $u_cd $arg_cd;
        set_unescape_uri $u_lang $arg_lang;
        set_unescape_uri $u_url $arg_url;
        set_unescape_uri $u_referrer $arg_referrer;
        set_unescape_uri $u_account $arg_account;
        set_unescape_uri $u_event $arg_event;
        set_unescape_uri $u_exts $arg_exts;

        set $msg $arg_msec$arg_userip$u_utrace$u_strace$u_domain$u_sw$u_sh$u_cd$u_lang$u_url$u_referrer$arg_useragent$u_account$u_event$u_exts;

        redis2_query lpush 'main:realtime' $msg;
        redis2_query publish 'main:fm' $msg;
        redis2_pass redis_pool;
    }

    location /i-log {
        internal;

        set_unescape_uri $u_utrace $arg_utrace;
        set_unescape_uri $u_strace $arg_strace;
        set_unescape_uri $u_domain $arg_domain;
        set_unescape_uri $u_sw $arg_sw;
        set_unescape_uri $u_sh $arg_sh;
        set_unescape_uri $u_cd $arg_cd;
        set_unescape_uri $u_lang $arg_lang;
        set_unescape_uri $u_url $arg_url;
        set_unescape_uri $u_referrer $arg_referrer;
        set_unescape_uri $u_account $arg_account;
        set_unescape_uri $u_event $arg_event;
        set_unescape_uri $u_exts $arg_exts;

        log_subrequest on;

        access_log logs/ma.log tick;

        echo '';
    }

}

